
package com.nb.library.client.type;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 * 
 */
@WebService(name = "TypeWorkClient", targetNamespace = "type.client.library.nb.com")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface TypeWorkClient {


    /**
     * 
     * @return
     *     returns java.util.List<com.nb.library.client.type.TypeWork>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listTypesWorks", targetNamespace = "type.client.library.nb.com", className = "com.nb.library.client.type.ListTypesWorks")
    @ResponseWrapper(localName = "listTypesWorksResponse", targetNamespace = "type.client.library.nb.com", className = "com.nb.library.client.type.ListTypesWorksResponse")
    @Action(input = "type.client.library.nb.com/TypeWorkClient/listTypesWorksRequest", output = "type.client.library.nb.com/TypeWorkClient/listTypesWorksResponse")
    public List<TypeWork> listTypesWorks();

    /**
     * 
     * @param arg0
     * @return
     *     returns com.nb.library.client.type.TypeWork
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTypeWork", targetNamespace = "type.client.library.nb.com", className = "com.nb.library.client.type.GetTypeWork")
    @ResponseWrapper(localName = "getTypeWorkResponse", targetNamespace = "type.client.library.nb.com", className = "com.nb.library.client.type.GetTypeWorkResponse")
    @Action(input = "type.client.library.nb.com/TypeWorkClient/getTypeWorkRequest", output = "type.client.library.nb.com/TypeWorkClient/getTypeWorkResponse")
    public TypeWork getTypeWork(
        @WebParam(name = "arg0", targetNamespace = "")
        TypeWork arg0);

}
